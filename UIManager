using UnityEngine;
using TMPro;

public class UIManager : MonoBehaviour
{
    public GameObject startingScreen;
    public GameObject endGameScreen;
    public GameObject highscoreScreen;
    public GameManager gameManager;
    public TextMeshProUGUI highscoreText;
    public TMP_InputField playerNameInputField;

    private void Start()
    {
        ShowStartingScreen();
    }

    public void ShowStartingScreen()
    {
        startingScreen.SetActive(true);
        endGameScreen.SetActive(false);
        highscoreScreen.SetActive(false);
    }

    public void ShowEndGameScreen()
    {
        startingScreen.SetActive(false);
        endGameScreen.SetActive(true);
        highscoreScreen.SetActive(false);
    }

    public void ShowHighscoreScreen()
    {
        startingScreen.SetActive(false);
        endGameScreen.SetActive(false);
        highscoreScreen.SetActive(true);

        UpdateHighscoreText();
    }

    public void StartGame()
    {
        // Hide starting screen and show game elements
        startingScreen.SetActive(false);

        gameManager.ResetGame();
    }

    public void RestartGame()
    {
        // Restart the game by hiding the end game screen and showing starting screen
        GameManager gameManager = FindObjectOfType<GameManager>();
        gameManager.ResetGame();
        ShowStartingScreen();
    }

    public void SaveHighscoreAndShowHighscoreScreen()
    {
        string playerName = playerNameInputField.text;
        gameManager.SaveHighscore(playerName);
        ShowHighscoreScreen();
    }

    private void UpdateHighscoreText()
    {
        string highscoreListText = "";
        for (int i = 1; i <= 10; i++)
        {
            int highscore = PlayerPrefs.GetInt($"Highscore{i}", 0);
            string highscorePlayer = PlayerPrefs.GetString($"HighscorePlayer{i}", "N/A");

            highscoreListText += $"{i}. {highscorePlayer}: {highscore}\n";
        }
        highscoreText.SetText(highscoreListText);
    }

}
